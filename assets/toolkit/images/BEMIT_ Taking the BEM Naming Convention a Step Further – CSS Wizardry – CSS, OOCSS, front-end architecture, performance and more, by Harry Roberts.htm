<!DOCTYPE html>
<!-- saved from url=(0085)http://csswizardry.com/2015/08/bemit-taking-the-bem-naming-convention-a-step-further/ -->
<html lang="en" class="page  "><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<meta name="viewport" content="width=device-width, minimum-scale=1.0">

<title>BEMIT: Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts</title>

<!-- Prefetch DNS for external assets (Twitter widgets etc). -->
<link rel="dns-prefetch" href="http://fonts.googleapis.com/">
<link rel="dns-prefetch" href="http://themes.googleusercontent.com/">
<link rel="stylesheet" href="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/css">
<link rel="stylesheet" href="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/csswizardry.min.css">

<link rel="dns-prefetch" href="http://cdn.adpacks.com/">
<link rel="dns-prefetch" href="http://s3.buysellads.com/">
<link rel="dns-prefetch" href="http://platform.twitter.com/">
<link rel="dns-prefetch" href="http://www.google-analytics.com/">
<link rel="dns-prefetch" href="http://platform.twitter.com/">
<link rel="dns-prefetch" href="http://s3.buysellads.com/">
<link rel="dns-prefetch" href="http://stats.buysellads.com/">
<link rel="dns-prefetch" href="https://twitter.com/">
<link rel="dns-prefetch" href="https://cdn.syndication.twimg.com/">

<!-- Prerender work page -->
<link rel="prerender" href="http://csswizardry.com/work/">

<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@csswizardry">
<meta name="twitter:domain" content="csswizardry.com">
<meta name="twitter:creator" content="@csswizardry">
<meta name="twitter:title" content="BEMIT: Taking the BEM Naming Convention a Step Further – CSS Wizardry">
<meta name="twitter:image:src" content="/logo.png">

    <meta name="twitter:description" content="Adding further meaning and information to the BEM naming convention">


<link rel="alternate" type="application/atom+xml" href="http://feeds.feedburner.com/csswizardrycom">

<link rel="shortcut icon" href="http://csswizardry.com/icon.png">
<link rel="apple-touch-icon-precomposed" href="http://csswizardry.com/icon.png">
<meta name="apple-mobile-web-app-title" content="csswizardry">
<meta name="description" content="Articles on CSS, OOCSS, front-end architecture, scalability and performance.">
<link rel="canonical" href="http://csswizardry.com/2015/08/bemit-taking-the-bem-naming-convention-a-step-further/">

<script type="text/javascript" charset="utf-8" async="" src="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/button.9c9dd7044dfaf420ee068697fbf32302.js"></script></head>


<body>

    <header class="page-head">

    <div class="wrapper">

        <nav class="site-nav">

    <a href="http://csswizardry.com/" class="site-nav__home">
        <svg class="site-nav__logo" width="64" height="64" xmlns="http://www.w3.org/2000/svg"><path d="M.234 44.003v-41.002c0-1.664 1.344-3.001 3.001-3.001h57.998c1.664 0 3.001 1.344 3.001 3.001v39.536c-1.803-1.102-3.911-1.653-6.324-1.653-3.356 0-5.9.788-7.632 2.363-1.732 1.576-2.598 3.554-2.598 5.936 0 2.61.896 4.528 2.688 5.755 1.058.734 2.971 1.413 5.737 2.039l2.814.631c1.648.361 2.857.776 3.626 1.245.77.481 1.155 1.161 1.155 2.039 0 1.503-.776 2.532-2.327 3.085l-.063.022-.078.001h-5.853c-.773-.274-1.385-.684-1.836-1.232-.493-.601-.824-1.509-.992-2.724h-5.304c0 1.491.288 2.809.864 3.956h-4.483c.524-1.058.786-2.232.786-3.523 0-2.369-.794-4.18-2.381-5.43-1.022-.806-2.538-1.449-4.546-1.93l-4.583-1.101c-1.768-.421-2.923-.788-3.464-1.101-.842-.469-1.263-1.179-1.263-2.129 0-1.034.427-1.84 1.281-2.418.854-.577 1.997-.866 3.428-.866 1.287 0 2.363.223 3.229.668 1.299.674 1.997 1.81 2.093 3.41h5.34c-.096-2.827-1.134-4.982-3.112-6.468-1.979-1.485-4.369-2.228-7.172-2.228-3.356 0-5.9.788-7.632 2.363-1.732 1.576-2.598 3.554-2.598 5.936 0 2.61.896 4.528 2.688 5.755 1.058.734 2.971 1.413 5.737 2.039l2.814.631c1.648.361 2.857.776 3.626 1.245.77.481 1.155 1.161 1.155 2.039 0 1.503-.776 2.532-2.327 3.085l-.066.023h-5.928c-.773-.274-1.385-.684-1.836-1.232-.493-.601-.824-1.509-.992-2.724h-5.304c0 1.491.288 2.809.864 3.956h-5.604c.887-1.39 1.481-2.991 1.781-4.804h-5.503c-.373 1.371-.842 2.4-1.407 3.085-.697.869-1.609 1.442-2.736 1.719h-3.314c-1.201-.309-2.236-.987-3.106-2.034-1.233-1.485-1.849-3.72-1.849-6.702 0-2.983.583-5.289 1.75-6.919s2.76-2.445 4.781-2.445c1.985 0 3.482.577 4.492 1.732.565.649 1.028 1.612 1.389 2.887h5.557c-.084-1.66-.698-3.314-1.84-4.961-2.069-2.935-5.34-4.402-9.815-4.402-3.114 0-5.717.949-7.809 2.848zm64 9.742v-4.165h-1.381c-.096-1.6-.794-2.736-2.093-3.41-.866-.445-1.942-.668-3.229-.668-1.431 0-2.574.289-3.428.866-.854.577-1.281 1.383-1.281 2.418 0 .95.421 1.66 1.263 2.129.541.313 1.696.68 3.464 1.101l4.583 1.101c.774.185 1.475.395 2.103.629z" fill="#f43059" class="site-nav__logo-fill"></path></svg>
    </a>

    <ul class="site-nav__list">
        <li class="site-nav__item"><a href="http://csswizardry.com/about/" class="site-nav__link  site-nav__about">About<span class="hide-palm"> and Contact</span></a></li>
        <li class="site-nav__item"><a href="http://csswizardry.com/case-studies/" class="site-nav__link  site-nav__case-studies">Case Studies</a></li>
        <li class="site-nav__item"><a href="http://csswizardry.com/speaking/" class="site-nav__link  site-nav__speaking">Speaking</a></li>
        <li class="site-nav__item"><a href="http://csswizardry.com/work/" class="site-nav__link  site-nav__hire-me">Hire Me</a></li>
    </ul>

</nav>


    </div>

</header>


<div class="wrapper">

    <div class="layout">
        <section class="layout__item  desk-three-fifths  post" data-ui-component="Main content">

            <time class="post__date" datetime="2015-08-05">5 August, 2015</time>

            <h1>BEMIT: Taking the BEM Naming Convention a Step Further</h1>

            <p>Anybody who’s followed me or my work for any length of time will no doubt know
that I’m a huge proponent of <a href="http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/">the BEM naming
convention</a>.
What I’m about to talk about in this post is not an alternative or different
naming convention to BEM, but an augmentation: small additions that level BEM up
a notch. This extended BEM syntax has been dubbed <i>BEMIT</i>, as it borrows
some paradigms and patterns from the (as yet unpublished) <a href="https://twitter.com/itcss_io">Inverted Triangle CSS
architecture</a>. BEM + ITCSS = BEMIT.</p>

<p>For a quick recap on BEM, it works by breaking all classes in a codebase down
into one of three groups:</p>

<ul>
  <li><strong>Block:</strong> The sole root of the component.</li>
  <li><strong>Element:</strong> A component part of the Block.</li>
  <li><strong>Modifier:</strong> A variant or extension of the Block.</li>
</ul>

<p>Blocks, Elements, and Modifiers: BEM. Absolutely every class in a project fits
into one of these categories, which is why BEM is so great—it’s incredibly
simple and straightforward.</p>

<p>The point of BEM is to give a lot more transparency and clarity in your markup.
BEM tells developers how classes relate to each other, which is particularly
useful in complex or deep pieces of DOM. For example, if I were to ask you to
delete all of the user-related classes in the following chunk of HTML, which
ones would you get rid of?</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;div class="media  user  premium"&gt;
  &lt;img src="" alt="" class="img  photo  avatar" /&gt;
  &lt;p class="body  bio"&gt;...&lt;/p&gt;
&lt;/div&gt;
</code></pre>
</div>

<p>Well we’d definitely start with <code class="highlighter-rouge">user</code>, but anything beyond that would have to
be a guess, educated or otherwise. However, if we rewrote it with BEM:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;div class="media  user  user--premium"&gt;
  &lt;img src="" alt="" class="media__img  user__photo  avatar" /&gt;
  &lt;p class="media__body  user__bio"&gt;...&lt;/p&gt;
&lt;/div&gt;
</code></pre>
</div>

<p>Here we can instantly see that <code class="highlighter-rouge">user</code>, <code class="highlighter-rouge">user--premium</code>, <code class="highlighter-rouge">user__photo</code>, and
<code class="highlighter-rouge">user__bio</code> are all related to each other. We can also see that <code class="highlighter-rouge">media</code>,
<code class="highlighter-rouge">media__img</code>, and <code class="highlighter-rouge">media__body</code> are related, and that <code class="highlighter-rouge">avatar</code> is just a lone
Block on its own with no Elements or Modifiers.</p>

<p>This level of detail from our classes alone is great! It allows us to make much
safer and more informed decisions about what things do and how we can use,
reuse, change, or remove them.</p>

<p>The one thing missing from BEM is that it only tells us what classes to in
relative terms, as in, how classes are related to <em>each other</em>. They don’t
really give us any idea of how things behave, act, or should be implemented in a
global and non-relative sense.</p>

<p>To that end, I decided to extend BEM to become BEMIT. BEMIT doesn’t add any
other types of class—we still only ever have Blocks, Elements, or Modifiers—but
it does add usage and state information.</p>

<h2 id="namespaces">Namespaces</h2>

<p>So as not to repeat myself, it’s probably best you refer to my post from earlier
this year, <a href="http://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/"><cite>More Transparent UI Code with
Namespaces</cite></a>,
in which I introduce the idea of prefixing every class in a codebase with a
certain string in order to explain to developers what kind of job it does. This
<a href="https://en.wikipedia.org/wiki/Hungarian_notation">Hungarian notation</a>-like
naming allows us to ascertain exactly what kind of job a class might have, how
and where we might be able to reuse it (if at all), whether or not we can modify
it, and much more. The linked article is pretty sizable, but will give you a
whole load more insight into the technique.</p>

<p>The most common types of namespace are <code class="highlighter-rouge">c-</code>, for Components, <code class="highlighter-rouge">o-</code>, for Objects,
<code class="highlighter-rouge">u-</code>, for Utilities, and <code class="highlighter-rouge">is-/has-</code> for States (there are plenty more detailed
in the linked post). With this in mind, the above HTML would be rewritten as
this:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;div class="o-media  c-user  c-user--premium"&gt;
  &lt;img src="" alt="" class="o-media__img  c-user__photo  c-avatar" /&gt;
  &lt;p class="o-media__body  c-user__bio"&gt;...&lt;/p&gt;
&lt;/div&gt;
</code></pre>
</div>

<p>From this, I can see that we have a reusable abstraction in <a href="http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/">the Media
Object</a>
(<code class="highlighter-rouge">o-media*</code>) and two implementation-specific components (<code class="highlighter-rouge">c-user*</code> and
<code class="highlighter-rouge">c-avatar</code>). These classes are all still Blocks, Elements, or Modifiers: they
haven’t added a new classification, but have added another layer of rich
meaning.</p>

<p>These namespaces tie in with the layers found in the Inverted Triangle CSS
architecture, meaning every class has a specific place to live in our project
(and on our filesystem).</p>

<h2 id="responsive-suffixes">Responsive Suffixes</h2>

<p>The next thing BEMIT adds to traditional BEM naming is responsive suffixes.
These suffixes take the format <code class="highlighter-rouge">@&lt;breakpoint&gt;</code>, and tell us <q>this class when
at this size</q>:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;div class="o-media@md  c-user  c-user--premium"&gt;
  &lt;img src="" alt="" class="o-media__img@md  c-user__photo  c-avatar" /&gt;
  &lt;p class="o-media__body@md  c-user__bio"&gt;...&lt;/p&gt;
&lt;/div&gt;
</code></pre>
</div>

<p>So here we have <code class="highlighter-rouge">o-media@md</code>, which means <q>be the media object at this
breakpoint</q>. Other possible examples:</p>

<ul>
  <li><code class="highlighter-rouge">u-hidden@print</code> – a utility class to hide things when in print context.</li>
  <li><code class="highlighter-rouge">u-1/4@lg</code> – a utility to make something a quarter width in the large
breakpoint.</li>
  <li><code class="highlighter-rouge">o-layout@md</code> – a layout object in the medium breakpoint.</li>
</ul>

<p>The <code class="highlighter-rouge">@</code> is a human readable and logical way of denoting conditional states. It
allows developers to learn about any potential permutations or appearances that
the piece of UI in question might have, just at a glance.</p>

<p><strong>N.B.</strong>: You have to escape the <code class="highlighter-rouge">@</code> symbol in your CSS file, like so:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>@media print {

  .u-hidden\@print {
    display: none;
  }

}
</code></pre>
</div>

<h2 id="healthchecks">Healthchecks</h2>

<p>By having these strict and consistent patterns in our HTML we can do a number of
things. Firstly, and most obviously, we can write much more expressive and rich
UI code for our colleagues, meaning they can learn and reason about the state
and shape of a project much more quickly. They can also contribute in the same
consistent manner.</p>

<p>But another happy side effect we get is that we can run a visual healthcheck
against our UI. By using substring selectors, we can target and then visualise
the general makeup of a page based on the types of class it contains:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>/**
 * Outline all classes.
 */
[class] {
  outline: 5px solid lightgrey;
}

/**
 * Outline all BEM Elements.
 */
[class*="__"] {
  outline: 5px solid grey;
}

/**
 * Outline all BEM Modifiers.
 */
[class*="--"] {
  outline: 5px solid darkgrey;
}

/**
 * Outline all Object classes.
 */
[class^="o-"],
[class*=" o-"] {
  outline: 5px solid orange;
}

/**
 * Outline all Component classes.
 */
[class^="c-"],
[class*=" c-"] {
  outline: 5px solid cyan;
}

/**
 * Outline all Responsive classes.
 */
[class*="@"] {
  outline: 5px solid rosybrown;
}

/**
 * Outline all Hack classes.
 */
[class^="_"] {
  outline: 5px solid red;
}
</code></pre>
</div>

<p>Of course this isn’t bulletproof—something might be both a Component and an
Element and a Responsive class—but if we write the classes in pretty selective
order (i.e. in the order of least to most important to know about, hence Hacks
coming last), we can begin to get a nice visual snapshot of the makeup of any
given page. You can read more about the benefits of this highlighting in <a href="http://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/#highlight-types-of-namespace">my
previous article about
namespaces</a>.</p>

<p>We can enable this healthcheck in multiple ways, but the simplest would probably
be nesting the whole lot in <a href="http://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/#scope-namespaces-s-">a Scope
class</a>:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>.s-healthcheck {

  ...

  /**
   * Outline all Responsive classes.
   */
  [class*="@"] {
    outline: 5px solid rosybrown;
  }

  ...

}
</code></pre>
</div>

<p>…which you can then add to your <code class="highlighter-rouge">html</code> element when you want to turn it on:</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="nt">&lt;html</span> <span class="na">class=</span><span class="s">"s-healthcheck"</span><span class="nt">&gt;</span>
</code></pre>
</div>

<h2 id="final-word">Final Word</h2>

<p>So there we have it, a couple of simple additions to BEM to turn it into BEMIT:
adding information onto the beginning and end of the standard Block, Element, or
Modifier classes to give us more knowledge about how the classes behave in a
non-relative sense. Some more examples:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>.c-page-head {}

@media screen and (min-width: 15em) {
  .u-text-center\@sm {}
}

.o-layout__item {}

@media print {
  .u-color-black\@print {}
}
</code></pre>
</div>


            

                <hr>

                <p>
                    <a href="http://csswizardry.com/work/" class="btn  btn--full">Did you enjoy this? <strong>Hire me!</strong></a>
                </p>
            

        </section><section class="layout__item  desk-three-tenths  desk-push-one-tenth" data-ui-component="Sub content">

            <p>Hi there, I’m Harry. I am an <a href="https://thenetawards.com/previous-winners/">award-winning</a> <b>Consultant Front-end Architect</b>, <b>designer</b>, <b>developer</b>, <b>writer</b> and <b>speaker</b> from the UK. I <a href="http://csswizardry.com/archive/">write</a>, <a href="http://twitter.com/csswizardry">tweet</a>, <a href="http://csswizardry.com/speaking/">speak</a> and <a href="http://github.com/csswizardry">share code</a> about authoring and scaling CSS for big websites. You can <a href="mailto:csswizardry@gmail.com?subject=Let%E2%80%99s%20work%20together">hire me</a>.</p>

<p><iframe id="twitter-widget-0" scrolling="no" frameborder="0" allowtransparency="true" class="twitter-follow-button twitter-follow-button-rendered" title="Twitter Follow Button" src="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/follow_button.d59f1863bc12f58215682d9908af95aa.en.html" style="position: static; visibility: visible; width: 230px; height: 20px;" data-screen-name="csswizardry"></iframe></p>

<hr>

<p class="text-banner">
  <a href="http://csswizardry.com/work/" class="btn  btn--full  btn--positive">I am currently <strong>accepting new projects</strong> for Q3–4, 2016</a>
  <small><a href="http://csswizardry.com/2014/08/csswizardry-referral-scheme/" class="link-secret">Referral scheme</a></small>
</p>

<article class="[ box  box--highlight ]  mb" data-ui-component="ad">
  <div class="adpacks">
    <script type="text/javascript" async="" src="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/ga.js"></script><script id="twitter-wjs" src="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/widgets.js"></script><script src="http://cdn.adpacks.com/adpacks.js?legacyid=1255689&amp;zoneid=1386&amp;key=2ef959fa3a5535d37060575e733650a1&amp;serve=C6SI42Y&amp;placement=csswizardrycom&amp;circle=dev" async="" id="_adpacks_js"></script>
</div>

</article>

<h4>Projects</h4>

<ul class="[ list-ui  list-ui--small ]  mb">
  <li><a href="https://github.com/inuitcss/inuitcss"><img src="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/logo-inuitcss.png" alt="inuitcss"></a></li>
  <li><a href="http://itcss.io/">ITCSS</a> – coming soon…</li>
  <li><a href="http://cssguidelin.es/"><img src="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/logo-css-guidelines.png" alt="CSS Guidelines"></a></li>
</ul>

<h4>Events</h4>

<ul class="list-ui  list-ui--small">

  <li>
    <h3 class="list-ui__title">Talk</h3>
    <a href="https://www.shopify.com/partners/blog/free-webinar-refactoring-css-without-losing-your-mind">Shopify Webinar</a>, Remote/Online, September 2016
  </li>

</ul>


        </section>

    </div>

</div>

<section class="[ band  band--tint ]  page-foot">

    <div class="wrapper">

        <div class="layout  layout--middle">
            <div class="layout__item  lap-and-up-one-quarter">
                <p>I am available for hire to consult, advise, and develop with passionate product teams across the globe.</p>
            </div><div class="layout__item  lap-and-up-one-quarter">
                <p>I specialise in large, product-based projects where performance and CSS scalability and maintainability are paramount.</p>
            </div><div class="layout__item  lap-and-up-one-half">
               <p><a href="http://csswizardry.com/work/" class="btn  btn--secondary  btn--full">I am currently <strong>considering new projects</strong> for Q3–4, 2016.</a></p>
            </div>
        </div>

    </div>

</section>

<footer class="page-micro">

    <p class="wrapper">
        <small class="page-micro__copy"><b>CSS Wizardry Ltd</b> is a company registered in England and Wales. <b>Company No.</b> 08698093, <b>VAT No.</b> 170659396</small>
    </p>

</footer>



<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
<script>

    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-1856861-4']);
    _gaq.push(['_trackPageview']);

    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();

</script>



<div id="window-resizer-tooltip"><a href="http://csswizardry.com/2015/08/bemit-taking-the-bem-naming-convention-a-step-further/#" title="Edit settings"></a><span class="tooltipTitle">Window size: </span><span class="tooltipWidth" id="winWidth"></span> x <span class="tooltipHeight" id="winHeight"></span><br><span class="tooltipTitle">Viewport size: </span><span class="tooltipWidth" id="vpWidth"></span> x <span class="tooltipHeight" id="vpHeight"></span></div><iframe id="rufous-sandbox" scrolling="no" frameborder="0" allowtransparency="true" allowfullscreen="true" style="position: absolute; visibility: hidden; display: none; width: 0px; height: 0px; padding: 0px; border: none;" src="./BEMIT_ Taking the BEM Naming Convention a Step Further – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts_files/saved_resource.html"></iframe></body></html>